/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    structure: Structure;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  admin?: boolean;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password: string;
}
export interface Structure {
  id: string;
  name?: string;
  structure_type?: (
    | 'csapa'
    | 'caarud'
    | 'chs'
    | 'chu'
    | 'chrs'
    | 'ccas'
    | 'am'
    | 'vet'
    | 'dispensaire'
    | 'pension'
    | 'day_care'
    | 'solidarity'
    | 'other'
  )[];
  day_night_care?: 'day_night_care' | 'day_care' | 'night_care';
  opening_days?: {
    monday?: {
      start_hour_am?: number;
      end_hour_am?: number;
      start_hour_pm?: number;
      end_hour_pm?: number;
    };
    tuesday?: {
      start_hour_am?: number;
      end_hour_am?: number;
      start_hour_pm?: number;
      end_hour_pm?: number;
    };
    wednesday?: {
      start_hour_am?: number;
      end_hour_am?: number;
      start_hour_pm?: number;
      end_hour_pm?: number;
    };
    thursday?: {
      start_hour_am?: number;
      end_hour_am?: number;
      start_hour_pm?: number;
      end_hour_pm?: number;
    };
    friday?: {
      start_hour_am?: number;
      end_hour_am?: number;
      start_hour_pm?: number;
      end_hour_pm?: number;
    };
    saturday?: {
      start_hour_am?: number;
      end_hour_am?: number;
      start_hour_pm?: number;
      end_hour_pm?: number;
    };
    sunday?: {
      start_hour_am?: number;
      end_hour_am?: number;
      start_hour_pm?: number;
      end_hour_pm?: number;
    };
  };
  description?: string;
  contact_phone?: string;
  contact_email?: string;
  website?: string;
  address?: string;
  city?: string;
  country?: string;
  postal_code?: string;
  Localisation?: {
    /**
     * @minItems 2
     * @maxItems 2
     */
    location?: [number, number];
  };
  additional_info?: string;
  capacity_pets?: number;
  capacity_humans?: number;
  supported_bardot?: boolean;
  supported_gp?: boolean;
  people_access_conditions?: {
    adapted_when_psychological_problems?: boolean;
    adapted_for_reduce_mobility?: boolean;
    adapted_when_illness_and_infections?: boolean;
    access_type?: (
      | 'free_access'
      | 'financial_participation_required'
      | 'id_card_mandatory'
      | 'income_condition'
      | 'orientation_required'
      | 'social_worker_orientation_required'
      | 'veterinary_orientation_required'
      | 'appointment_only'
    )[];
    additional_specific_condition?: string;
    max_pets_per_person?: '1' | '2' | '3' | 'unlimited';
    public_type?: ('adults' | 'minors' | 'men_only' | 'women_only' | 'couple_without_children' | 'family')[];
  };
  pets_access_conditions?: {
    conditions?: (
      | 'sterilized_mandatory'
      | 'access_to_common_areas_allowed'
      | 'short_leash_mandatory'
      | 'muzzle_mandatory'
      | 'up_to_date_health_record_mandatory'
      | 'must_stay_in_the_yard'
      | 'must_remain_in_a_cage'
      | 'mandatory_pest_control_treatment'
      | 'identified_mandatory'
      | 'category_dogs_denied'
      | 'can_sleep_with_human'
      | 'additional_specific_condition'
    )[];
    pet_type_accepted?: ('all' | 'dogs' | 'cats' | 'small_dogs' | 'nac')[];
    additional_specific_condition?: string;
  };
  human_services?: {
    health?: {
      doctor?: {
        available?: boolean;
        additional_info?: string;
      };
      nurse?: {
        available?: boolean;
        additional_info?: string;
      };
      psychologist?: {
        available?: boolean;
        additional_info?: string;
      };
      social_services?: {
        available?: boolean;
        additional_info?: string;
      };
      addiction?: {
        available?: boolean;
        additional_info?: string;
      };
      hot_drinks?: {
        available?: boolean;
        additional_info?: string;
      };
      food?: {
        available?: boolean;
        additional_info?: string;
      };
      food_distribution?: {
        available?: boolean;
        additional_info?: string;
      };
    };
    commodities?: {
      shower?: {
        available?: boolean;
        additional_info?: string;
      };
      laveries?: {
        available?: boolean;
        additional_info?: string;
      };
      bagagerie?: {
        available?: boolean;
        additional_info?: string;
      };
      loading_battery?: {
        available?: boolean;
        additional_info?: string;
      };
      wifi?: {
        available?: boolean;
        additional_info?: string;
      };
      resting_space?: {
        available?: boolean;
        additional_info?: string;
      };
      vestiaire?: {
        available?: boolean;
        additional_info?: string;
      };
      administrative_help?: {
        available?: boolean;
        additional_info?: string;
      };
      other?: {
        available?: boolean;
        additional_info?: string;
      };
    };
  };
  pets_services?: {
    health?: {
      vet?: {
        available?: boolean;
        additional_info?: string;
      };
      vet_consultation?: {
        available?: boolean;
        additional_info?: string;
      };
      surgery?: {
        available?: boolean;
        additional_info?: string;
      };
      identification?: {
        available?: boolean;
        additional_info?: string;
      };
      dental_care?: {
        available?: boolean;
        additional_info?: string;
      };
      parasytic_treatment?: {
        available?: boolean;
        additional_info?: string;
      };
      vaccination?: {
        available?: boolean;
        additional_info?: string;
      };
    };
    keeping?: {
      foster_family?: {
        available?: boolean;
        additional_info?: string;
      };
      kennel?: {
        available?: boolean;
        additional_info?: string;
      };
    };
    feeding?: {
      behavior_help?: {
        available?: boolean;
        additional_info?: string;
      };
      equipment_distribution?: {
        available?: boolean;
        additional_info?: string;
      };
      wellness_workshop?: {
        available?: boolean;
        additional_info?: string;
      };
      animations?: {
        available?: boolean;
        additional_info?: string;
      };
      grooming?: {
        available?: boolean;
        additional_info?: string;
      };
    };
  };
  picture?: {
    image: string | Media;
    picture_description?: string;
    picture_name?: string;
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    thumbnail?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    card?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    tablet?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string;
  batch?: number;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes {
    collections: {
      'users': User
      'structure': Structure
      'media': Media
      'payload-preferences': PayloadPreference
      'payload-migrations': PayloadMigration
    }

  }
}