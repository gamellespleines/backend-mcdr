/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    structure: Structure;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  admin?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Structure {
  id: string;
  name?: string | null;
  structure_type?:
    | (
        | 'csapa'
        | 'caarud'
        | 'chs'
        | 'chu'
        | 'chrs'
        | 'ccas'
        | 'am'
        | 'vet'
        | 'dispensaire'
        | 'pension'
        | 'day_care'
        | 'solidarity'
        | 'other'
      )[]
    | null;
  day_night_care?: ('day_night_care' | 'day_care' | 'night_care') | null;
  opening_days?: {
    monday?: {
      start_am?: string | null;
      end_am?: string | null;
      start_pm?: string | null;
      end_pm?: string | null;
    };
    tuesday?: {
      start_am?: string | null;
      end_am?: string | null;
      start_pm?: string | null;
      end_pm?: string | null;
    };
    wednesday?: {
      start_am?: string | null;
      end_am?: string | null;
      start_pm?: string | null;
      end_pm?: string | null;
    };
    thursday?: {
      start_am?: string | null;
      end_am?: string | null;
      start_pm?: string | null;
      end_pm?: string | null;
    };
    friday?: {
      start_am?: string | null;
      end_am?: string | null;
      start_pm?: string | null;
      end_pm?: string | null;
    };
    saturday?: {
      start_am?: string | null;
      end_am?: string | null;
      start_pm?: string | null;
      end_pm?: string | null;
    };
    sunday?: {
      start_am?: string | null;
      end_am?: string | null;
      start_pm?: string | null;
      end_pm?: string | null;
    };
  };
  description?: string | null;
  contact_phone?: string | null;
  contact_email?: string | null;
  website?: string | null;
  address?: string | null;
  city?: string | null;
  country?: string | null;
  postal_code?: string | null;
  Localisation?: {
    /**
     * @minItems 2
     * @maxItems 2
     */
    location?: [number, number] | null;
  };
  additional_info?: string | null;
  capacity_pets?: number | null;
  capacity_humans?: number | null;
  supported_bardot?: boolean | null;
  supported_gp?: boolean | null;
  people_access_conditions?: {
    public_type?: ('adults' | 'minors' | 'men_only' | 'women_only' | 'couple_without_children' | 'family')[] | null;
    access_type?:
      | (
          | 'free_access'
          | 'financial_participation_required'
          | 'id_card_mandatory'
          | 'income_condition'
          | 'orientation_required'
          | 'social_worker_orientation_required'
          | 'veterinary_orientation_required'
          | 'appointment_only'
        )[]
      | null;
    additional_specific_condition?: string | null;
    max_pets_per_person?: ('1' | '2' | '3' | 'unlimited') | null;
  };
  pets_access_conditions?: {
    conditions?:
      | (
          | 'sterilized_mandatory'
          | 'access_to_common_areas_allowed'
          | 'short_leash_mandatory'
          | 'muzzle_mandatory'
          | 'up_to_date_health_record_mandatory'
          | 'must_stay_in_the_yard'
          | 'must_remain_in_a_cage'
          | 'mandatory_pest_control_treatment'
          | 'identified_mandatory'
          | 'category_dogs_denied'
          | 'can_sleep_with_human'
          | 'additional_specific_condition'
        )[]
      | null;
    pet_type_accepted?: ('all' | 'dogs' | 'cats' | 'small_dogs' | 'nac')[] | null;
    additional_specific_condition?: string | null;
  };
  human_services?: {
    health?: {
      doctor?: {
        available?: boolean | null;
      };
      nurse?: {
        available?: boolean | null;
      };
      psychologist?: {
        available?: boolean | null;
      };
      social_services?: {
        available?: boolean | null;
      };
      addiction?: {
        available?: boolean | null;
      };
      hot_drinks?: {
        available?: boolean | null;
      };
      food?: {
        available?: boolean | null;
      };
      food_distribution?: {
        available?: boolean | null;
      };
    };
    additional_info?: string | null;
    commodities?: {
      shower?: {
        available?: boolean | null;
      };
      laveries?: {
        available?: boolean | null;
      };
      bagagerie?: {
        available?: boolean | null;
      };
      loading_battery?: {
        available?: boolean | null;
      };
      wifi?: {
        available?: boolean | null;
      };
      resting_space?: {
        available?: boolean | null;
      };
      vestiaire?: {
        available?: boolean | null;
      };
      administrative_help?: {
        available?: boolean | null;
      };
      other?: {
        available?: boolean | null;
      };
    };
  };
  pets_services?: {
    health_available?: boolean | null;
    health?: {
      vet?: {
        available?: boolean | null;
      };
      vet_consultation?: {
        available?: boolean | null;
      };
      surgery?: {
        available?: boolean | null;
      };
      identification?: {
        available?: boolean | null;
      };
      parasytic_treatment?: {
        available?: boolean | null;
      };
      vaccination?: {
        available?: boolean | null;
      };
    };
    additional_info?: string | null;
    keeping_available?: boolean | null;
    keeping?: {
      foster_family?: {
        available?: boolean | null;
      };
      kennel?: {
        available?: boolean | null;
      };
    };
    feeding_available?: boolean | null;
    feeding?: {
      food_distribution?: {
        available?: boolean | null;
      };
      bowls?: {
        available?: boolean | null;
      };
    };
    taking_care_available?: boolean | null;
    taking_care?: {
      behavior_help?: {
        available?: boolean | null;
      };
      equipment_distribution?: {
        available?: boolean | null;
      };
      wellness_workshop?: {
        available?: boolean | null;
      };
      animations?: {
        available?: boolean | null;
      };
      grooming?: {
        available?: boolean | null;
      };
    };
  };
  picture?:
    | {
        image: string | Media;
        picture_description?: string | null;
        picture_name?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}